<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="8" total="31" passed="20">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="21931" started-at="2020-10-07T16:37:53 IST" finished-at="2020-10-07T16:38:15 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="21931" started-at="2020-10-07T16:37:53 IST" finished-at="2020-10-07T16:38:15 IST">
      <class name="com.productapi.TestCases.TC003_Post_Product_Record">
        <test-method status="PASS" signature="createProduct()[pri:0, instance:com.productapi.TestCases.TC003_Post_Product_Record@77f99a05]" name="createProduct" is-config="true" duration-ms="6997" started-at="2020-10-07T16:37:53 IST" finished-at="2020-10-07T16:38:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProduct -->
        <test-method status="PASS" signature="checkContentLength()[pri:0, instance:com.productapi.TestCases.TC003_Post_Product_Record@77f99a05]" name="checkContentLength" duration-ms="1" started-at="2020-10-07T16:38:15 IST" finished-at="2020-10-07T16:38:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.productapi.TestCases.TC003_Post_Product_Record@77f99a05]" name="checkContentType" duration-ms="4" started-at="2020-10-07T16:38:15 IST" finished-at="2020-10-07T16:38:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="FAIL" signature="checkResponseBody()[pri:0, instance:com.productapi.TestCases.TC003_Post_Product_Record@77f99a05]" name="checkResponseBody" duration-ms="6" started-at="2020-10-07T16:38:15 IST" finished-at="2020-10-07T16:38:15 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:751)
at org.testng.Assert.assertEquals(Assert.java:761)
at com.productapi.TestCases.TC003_Post_Product_Record.checkResponseBody(TC003_Post_Product_Record.java:61)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:483)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at org.testng.TestRunner$$Lambda$170/703555670.accept(Unknown Source)
at java.util.ArrayList.forEach(ArrayList.java:1234)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="FAIL" signature="checkStatusCode()[pri:0, instance:com.productapi.TestCases.TC003_Post_Product_Record@77f99a05]" name="checkStatusCode" duration-ms="1" started-at="2020-10-07T16:38:15 IST" finished-at="2020-10-07T16:38:15 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [201] but found [200]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [201] but found [200]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at org.testng.Assert.assertEquals(Assert.java:849)
at com.productapi.TestCases.TC003_Post_Product_Record.checkStatusCode(TC003_Post_Product_Record.java:78)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:483)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at org.testng.TestRunner$$Lambda$170/703555670.accept(Unknown Source)
at java.util.ArrayList.forEach(ArrayList.java:1234)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.productapi.TestCases.TC003_Post_Product_Record@77f99a05]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-10-07T16:38:15 IST" finished-at="2020-10-07T16:38:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.productapi.TestCases.TC003_Post_Product_Record -->
      <class name="com.productapi.TestCases.TC002_Get_Single_Employee_Record">
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:com.productapi.TestCases.TC002_Get_Single_Employee_Record@63440df3]" name="getAllEmployees" is-config="true" duration-ms="3056" started-at="2020-10-07T16:38:08 IST" finished-at="2020-10-07T16:38:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="FAIL" signature="checkContentEncoding()[pri:0, instance:com.productapi.TestCases.TC002_Get_Single_Employee_Record@63440df3]" name="checkContentEncoding" duration-ms="3" started-at="2020-10-07T16:38:11 IST" finished-at="2020-10-07T16:38:11 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [gzip] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [gzip] but found [null]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertEqualsImpl(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at com.productapi.TestCases.TC002_Get_Single_Employee_Record.checkContentEncoding(TC002_Get_Single_Employee_Record.java:103)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:483)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at org.testng.TestRunner$$Lambda$170/703555670.accept(Unknown Source)
at java.util.ArrayList.forEach(ArrayList.java:1234)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.productapi.TestCases.TC002_Get_Single_Employee_Record@63440df3]" name="checkContentType" duration-ms="2" started-at="2020-10-07T16:38:11 IST" finished-at="2020-10-07T16:38:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.productapi.TestCases.TC002_Get_Single_Employee_Record@63440df3]" name="checkResponseBody" duration-ms="2" started-at="2020-10-07T16:38:11 IST" finished-at="2020-10-07T16:38:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.productapi.TestCases.TC002_Get_Single_Employee_Record@63440df3]" name="checkResponseTime" duration-ms="1" started-at="2020-10-07T16:38:11 IST" finished-at="2020-10-07T16:38:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.productapi.TestCases.TC002_Get_Single_Employee_Record@63440df3]" name="checkStatusCode" duration-ms="1" started-at="2020-10-07T16:38:11 IST" finished-at="2020-10-07T16:38:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="checkStatusLine()[pri:0, instance:com.productapi.TestCases.TC002_Get_Single_Employee_Record@63440df3]" name="checkStatusLine" duration-ms="1" started-at="2020-10-07T16:38:11 IST" finished-at="2020-10-07T16:38:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.productapi.TestCases.TC002_Get_Single_Employee_Record@63440df3]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-10-07T16:38:11 IST" finished-at="2020-10-07T16:38:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.productapi.TestCases.TC002_Get_Single_Employee_Record -->
      <class name="com.productapi.TestCases.TC001_Get_All_Products">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.productapi.TestCases.TC001_Get_All_Products@1a3869f4]" name="setUp" is-config="true" duration-ms="127" started-at="2020-10-07T16:37:53 IST" finished-at="2020-10-07T16:37:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:com.productapi.TestCases.TC001_Get_All_Products@1a3869f4]" name="getAllEmployees" is-config="true" duration-ms="3231" started-at="2020-10-07T16:38:05 IST" finished-at="2020-10-07T16:38:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="PASS" signature="checkContentEncoding()[pri:0, instance:com.productapi.TestCases.TC001_Get_All_Products@1a3869f4]" name="checkContentEncoding" duration-ms="11" started-at="2020-10-07T16:38:08 IST" finished-at="2020-10-07T16:38:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.productapi.TestCases.TC001_Get_All_Products@1a3869f4]" name="checkContentType" duration-ms="3" started-at="2020-10-07T16:38:08 IST" finished-at="2020-10-07T16:38:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.productapi.TestCases.TC001_Get_All_Products@1a3869f4]" name="checkResponseBody" duration-ms="28" started-at="2020-10-07T16:38:08 IST" finished-at="2020-10-07T16:38:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.productapi.TestCases.TC001_Get_All_Products@1a3869f4]" name="checkResponseTime" duration-ms="1" started-at="2020-10-07T16:38:08 IST" finished-at="2020-10-07T16:38:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.productapi.TestCases.TC001_Get_All_Products@1a3869f4]" name="checkStatusCode" duration-ms="2" started-at="2020-10-07T16:38:08 IST" finished-at="2020-10-07T16:38:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.productapi.TestCases.TC001_Get_All_Products@1a3869f4]" name="tearDown" is-config="true" duration-ms="13" started-at="2020-10-07T16:38:08 IST" finished-at="2020-10-07T16:38:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearrDown()[pri:0, instance:com.productapi.TestCases.TC001_Get_All_Products@1a3869f4]" name="tearrDown" is-config="true" duration-ms="525" started-at="2020-10-07T16:38:15 IST" finished-at="2020-10-07T16:38:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearrDown -->
      </class> <!-- com.productapi.TestCases.TC001_Get_All_Products -->
      <class name="com.productapi.TestCases.TC004_Put_Products_Record">
        <test-method status="PASS" signature="createProduct()[pri:0, instance:com.productapi.TestCases.TC004_Put_Products_Record@a38d7a3]" name="createProduct" is-config="true" duration-ms="5150" started-at="2020-10-07T16:38:00 IST" finished-at="2020-10-07T16:38:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createProduct -->
        <test-method status="PASS" signature="checkContentLength()[pri:0, instance:com.productapi.TestCases.TC004_Put_Products_Record@a38d7a3]" name="checkContentLength" duration-ms="1" started-at="2020-10-07T16:38:11 IST" finished-at="2020-10-07T16:38:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.productapi.TestCases.TC004_Put_Products_Record@a38d7a3]" name="checkContentType" duration-ms="1" started-at="2020-10-07T16:38:11 IST" finished-at="2020-10-07T16:38:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.productapi.TestCases.TC004_Put_Products_Record@a38d7a3]" name="checkResponseBody" duration-ms="1" started-at="2020-10-07T16:38:11 IST" finished-at="2020-10-07T16:38:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.productapi.TestCases.TC004_Put_Products_Record@a38d7a3]" name="checkStatusCode" duration-ms="1" started-at="2020-10-07T16:38:11 IST" finished-at="2020-10-07T16:38:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.productapi.TestCases.TC004_Put_Products_Record@a38d7a3]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-10-07T16:38:11 IST" finished-at="2020-10-07T16:38:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.productapi.TestCases.TC004_Put_Products_Record -->
      <class name="com.productapi.TestCases.TC005_Delete_Product_Record">
        <test-method status="PASS" signature="getAllEmployees()[pri:0, instance:com.productapi.TestCases.TC005_Delete_Product_Record@3aeaafa6]" name="getAllEmployees" is-config="true" duration-ms="3277" started-at="2020-10-07T16:38:11 IST" finished-at="2020-10-07T16:38:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method status="PASS" signature="checkContentType()[pri:0, instance:com.productapi.TestCases.TC005_Delete_Product_Record@3aeaafa6]" name="checkContentType" duration-ms="1" started-at="2020-10-07T16:38:15 IST" finished-at="2020-10-07T16:38:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method status="PASS" signature="checkResponseBody()[pri:0, instance:com.productapi.TestCases.TC005_Delete_Product_Record@3aeaafa6]" name="checkResponseBody" duration-ms="2" started-at="2020-10-07T16:38:15 IST" finished-at="2020-10-07T16:38:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseBody -->
        <test-method status="PASS" signature="checkResponseTime()[pri:0, instance:com.productapi.TestCases.TC005_Delete_Product_Record@3aeaafa6]" name="checkResponseTime" duration-ms="2" started-at="2020-10-07T16:38:15 IST" finished-at="2020-10-07T16:38:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method status="PASS" signature="checkStatusCode()[pri:0, instance:com.productapi.TestCases.TC005_Delete_Product_Record@3aeaafa6]" name="checkStatusCode" duration-ms="3" started-at="2020-10-07T16:38:15 IST" finished-at="2020-10-07T16:38:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.productapi.TestCases.TC005_Delete_Product_Record@3aeaafa6]" name="tearDown" is-config="true" duration-ms="4" started-at="2020-10-07T16:38:15 IST" finished-at="2020-10-07T16:38:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.productapi.TestCases.TC005_Delete_Product_Record -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
